// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// calcIBD
List calcIBD(CharacterVector& popType, CharacterVector& markerFile, CharacterVector& mapFile, Nullable<DataFrame&> evalPos, Nullable<NumericVector&> evalDist, const bool& grid, const bool& verbose);
RcppExport SEXP _statgenIBD_calcIBD(SEXP popTypeSEXP, SEXP markerFileSEXP, SEXP mapFileSEXP, SEXP evalPosSEXP, SEXP evalDistSEXP, SEXP gridSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector& >::type popType(popTypeSEXP);
    Rcpp::traits::input_parameter< CharacterVector& >::type markerFile(markerFileSEXP);
    Rcpp::traits::input_parameter< CharacterVector& >::type mapFile(mapFileSEXP);
    Rcpp::traits::input_parameter< Nullable<DataFrame&> >::type evalPos(evalPosSEXP);
    Rcpp::traits::input_parameter< Nullable<NumericVector&> >::type evalDist(evalDistSEXP);
    Rcpp::traits::input_parameter< const bool& >::type grid(gridSEXP);
    Rcpp::traits::input_parameter< const bool& >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(calcIBD(popType, markerFile, mapFile, evalPos, evalDist, grid, verbose));
    return rcpp_result_gen;
END_RCPP
}
// simQTL
int simQTL(CharacterVector& inputfile, DataFrame& inbFnd, Nullable<CharacterVector&> dir_name, const std::string& mapfile, const NumericVector& chrLength, const NumericVector& nlocChr, const int& nr_alleles, Nullable<DataFrame&> QTLPos, const int& nrep, const bool& print_flexQTL, const double& fr_miss, const double& mu, const double& sigma2_e, const long int& start_seed);
RcppExport SEXP _statgenIBD_simQTL(SEXP inputfileSEXP, SEXP inbFndSEXP, SEXP dir_nameSEXP, SEXP mapfileSEXP, SEXP chrLengthSEXP, SEXP nlocChrSEXP, SEXP nr_allelesSEXP, SEXP QTLPosSEXP, SEXP nrepSEXP, SEXP print_flexQTLSEXP, SEXP fr_missSEXP, SEXP muSEXP, SEXP sigma2_eSEXP, SEXP start_seedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector& >::type inputfile(inputfileSEXP);
    Rcpp::traits::input_parameter< DataFrame& >::type inbFnd(inbFndSEXP);
    Rcpp::traits::input_parameter< Nullable<CharacterVector&> >::type dir_name(dir_nameSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type mapfile(mapfileSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type chrLength(chrLengthSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type nlocChr(nlocChrSEXP);
    Rcpp::traits::input_parameter< const int& >::type nr_alleles(nr_allelesSEXP);
    Rcpp::traits::input_parameter< Nullable<DataFrame&> >::type QTLPos(QTLPosSEXP);
    Rcpp::traits::input_parameter< const int& >::type nrep(nrepSEXP);
    Rcpp::traits::input_parameter< const bool& >::type print_flexQTL(print_flexQTLSEXP);
    Rcpp::traits::input_parameter< const double& >::type fr_miss(fr_missSEXP);
    Rcpp::traits::input_parameter< const double& >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const double& >::type sigma2_e(sigma2_eSEXP);
    Rcpp::traits::input_parameter< const long int& >::type start_seed(start_seedSEXP);
    rcpp_result_gen = Rcpp::wrap(simQTL(inputfile, inbFnd, dir_name, mapfile, chrLength, nlocChr, nr_alleles, QTLPos, nrep, print_flexQTL, fr_miss, mu, sigma2_e, start_seed));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_statgenIBD_calcIBD", (DL_FUNC) &_statgenIBD_calcIBD, 7},
    {"_statgenIBD_simQTL", (DL_FUNC) &_statgenIBD_simQTL, 14},
    {NULL, NULL, 0}
};

RcppExport void R_init_statgenIBD(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
